//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Assets.RTSCore.Misc;
using Assets.RTSCore.Requests;

namespace Assets.RTSCore.AI
{
	public static class RequestManager
	{
		private static List<Request> _recentRequests;

		public static void Run(List<WorldObject.WorldObject> worldObjects) 
		{
			_recentRequests = GetAllPostedRequests(worldObjects);
			DistributeRequests(worldObjects, _recentRequests);
			CleanUpCompletedRequests(worldObjects);
		}

		public static List<Request> GetPostedRequests() 
		{
			return _recentRequests;
		}

		private static void CleanUpCompletedRequests(List<WorldObject.WorldObject> worldObjects) {
			foreach (WorldObject.WorldObject wob in worldObjects) {
				wob.Requests.RemoveCompletedRequests();
			}
		}

		private static List<Request> GetAllPostedRequests(List<WorldObject.WorldObject> worldObjects) 
		{
			List<Request> requests = new List<Request>();
			foreach (WorldObject.WorldObject wob in worldObjects) 
			{
				requests.AddRange(wob.Requests.PostedRequests);
			}
			return requests;
		}

		private static void DistributeRequests(List<WorldObject.WorldObject> worldObjects, List<Request> requests) 
		{
			foreach (Request request in requests) 
			{
				if (request.State == RequestState.Posted) 
				{
					DistributeRequest(worldObjects, request);
				}
			}
		}

		private static void DistributeRequest(List<WorldObject.WorldObject> worldObjects, Request request) 
		{
				bool yes = request.CanMeetRequest(worldObjects);
				if (yes) 
				{
					request.State = RequestState.Accepted;
					request.Initiate();
				}
		} 
	}
}

